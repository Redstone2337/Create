accessWidener v1 named

accessible class net/minecraft/client/particle/ParticleEngine$SpriteParticleRegistration

accessible class net/minecraft/world/level/chunk/PaletteResize

extendable method net/minecraft/world/entity/Entity positionRider (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity$MoveFunction;)V

accessible class net/minecraft/world/item/crafting/Ingredient$Value
accessible class net/minecraft/world/item/crafting/Ingredient$ItemValue
accessible class net/minecraft/world/item/crafting/Ingredient$TagValue

accessible class net/minecraft/client/renderer/RenderType$CompositeState
accessible class net/minecraft/client/renderer/RenderType$CompositeRenderType

accessible method net/minecraft/world/level/block/WeatheringCopper getPrevious (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional;

# Mixin can't handle an invoker here thanks to weird generics, so we need this AW'd
accessible method net/minecraft/client/gui/screens/Screen addRenderableWidget (Lnet/minecraft/client/gui/components/events/GuiEventListener;)Lnet/minecraft/client/gui/components/events/GuiEventListener;

# Can't figure out an invoker with more than 1 constructor
accessible method net/minecraft/world/item/context/UseOnContext <init> (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/phys/BlockHitResult;)V

accessible field net/minecraft/data/tags/TagsProvider$TagAppender builder Lnet/minecraft/tags/TagBuilder;

# I (IThundxr) will change these to use accessors upstream eventually
accessible field net/minecraft/client/renderer/LevelRenderer capturedFrustum Lnet/minecraft/client/renderer/culling/Frustum;
accessible field net/minecraft/client/renderer/LevelRenderer cullingFrustum Lnet/minecraft/client/renderer/culling/Frustum;

# Can't cast a final class to a interface (accessor)
extendable class net/minecraft/client/model/geom/ModelPart
